services:
  backend:
    build:
      context: "./backend"
      dockerfile: Dockerfile
    container_name: backend
    command: sh -c "python scripts/seed.py && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app"
    volumes:
      - "./backend:/app"
      - "./videos:/app/videos"
      - ./backend/.gcloud/credentials.json:/app/.gcloud/credentials.json:ro
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=infrasight
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - SECRET_KEY=${SECRET_KEY}
      - FRONTEND_URL=http://localhost:3000
      - RESET_PASSWORD_URL=http://localhost:3000/reset-password
      - HUGGINGFACE_API_TOKEN=${HUGGINGFACE_API_TOKEN}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - appnet

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder
    container_name: frontend
    command: npm run dev
    working_dir: /app
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - WATCHPACK_POLLING=true
    stdin_open: true
    tty: true
    networks:
      - appnet

  db:
    image: postgis/postgis:13-3.1
    restart: always
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=infrasight
      - DB_USER=postgres
      - DB_NAME=infrasight
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - appnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  frontend_node_modules:

networks:
  appnet:
    driver: bridge