"""Initial migration

Revision ID: 0001
Revises: 
Create Date: 2025-08-09 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geometry


# revision identifiers, used by Alembic.
revision = '0001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto-generated by Alembic - please adjust! ###
    op.create_table('user_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'city_official', 'department_head', 'maintenance_crew', 'citizen', name='userroleenum'), nullable=False),
    sa.Column('department', sa.Enum('public_works', 'utilities', 'transportation', 'sanitation', 'parks_recreation', name='departmenttypeenum'), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('reset_token', sa.String(), nullable=True),
    sa.Column('reset_token_expires', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_profiles_email'), 'user_profiles', ['email'], unique=True)
    op.create_index(op.f('ix_user_profiles_reset_token'), 'user_profiles', ['reset_token'], unique=False)
    op.create_table('video_feeds',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location_name', sa.String(), nullable=False),
    sa.Column('latitude', sa.Numeric(10, 8), nullable=False),
    sa.Column('longitude', sa.Numeric(11, 8), nullable=False),
    sa.Column('location', Geometry(geometry_type='POINT', srid=4326), nullable=True),
    sa.Column('stream_url', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('ai_detection_enabled', sa.Boolean(), nullable=True),
    sa.Column('department', sa.Enum('public_works', 'utilities', 'transportation', 'sanitation', 'parks_recreation', name='departmenttypeenum'), nullable=True),
    sa.Column('installation_date', sa.Date(), nullable=True),
    sa.Column('last_maintenance', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_video_feeds_location'), 'video_feeds', ['location'], unique=False)
    op.create_table('infrastructure_issues',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('issue_type', sa.Enum('pothole', 'water_leak', 'garbage_overflow', 'streetlight_fault', 'traffic_signal', 'road_damage', 'sidewalk_issue', 'other', name='issuetypeenum'), nullable=False),
    sa.Column('status', sa.Enum('detected', 'verified', 'in_progress', 'resolved', 'false_positive', name='issuestatusenum'), nullable=True),
    sa.Column('priority', sa.Enum('low', 'medium', 'high', 'critical', name='issuepriorityenum'), nullable=True),
    sa.Column('latitude', sa.Numeric(10, 8), nullable=False),
    sa.Column('longitude', sa.Numeric(11, 8), nullable=False),
    sa.Column('location', Geometry(geometry_type='POINT', srid=4326), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('detection_source', sa.Enum('ai_camera', 'citizen_report', 'sensor', 'manual_inspection', name='detectionsourceenum'), nullable=False),
    sa.Column('video_feed_id', sa.UUID(), nullable=True),
    sa.Column('reported_by_id', sa.UUID(), nullable=True),
    sa.Column('assigned_to_id', sa.UUID(), nullable=True),
    sa.Column('department', sa.Enum('public_works', 'utilities', 'transportation', 'sanitation', 'parks_recreation', name='departmenttypeenum'), nullable=True),
    sa.Column('estimated_cost', sa.Numeric(10, 2), nullable=True),
    sa.Column('detected_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to_id'], ['user_profiles.id'], ),
    sa.ForeignKeyConstraint(['reported_by_id'], ['user_profiles.id'], ),
    sa.ForeignKeyConstraint(['video_feed_id'], ['video_feeds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_infrastructure_issues_assigned_to_id'), 'infrastructure_issues', ['assigned_to_id'], unique=False)
    op.create_index(op.f('ix_infrastructure_issues_department'), 'infrastructure_issues', ['department'], unique=False)
    op.create_index(op.f('ix_infrastructure_issues_issue_type'), 'infrastructure_issues', ['issue_type'], unique=False)
    op.create_index(op.f('ix_infrastructure_issues_location'), 'infrastructure_issues', ['location'], unique=False)
    op.create_index(op.f('ix_infrastructure_issues_reported_by_id'), 'infrastructure_issues', ['reported_by_id'], unique=False)
    op.create_index(op.f('ix_infrastructure_issues_status'), 'infrastructure_issues', ['status'], unique=False)
    op.create_index(op.f('ix_infrastructure_issues_video_feed_id'), 'infrastructure_issues', ['video_feed_id'], unique=False)
    op.create_table('ai_detections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('video_feed_id', sa.UUID(), nullable=True),
    sa.Column('issue_id', sa.UUID(), nullable=True),
    sa.Column('detection_type', sa.Enum('pothole', 'water_leak', 'garbage_overflow', 'streetlight_fault', 'traffic_signal', 'road_damage', 'sidewalk_issue', 'other', name='issuetypeenum'), nullable=False),
    sa.Column('confidence_score', sa.Numeric(5, 4), nullable=False),
    sa.Column('bounding_box', sa.JSON(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verified_by_id', sa.UUID(), nullable=True),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('detected_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['issue_id'], ['infrastructure_issues.id'], ),
    sa.ForeignKeyConstraint(['verified_by_id'], ['user_profiles.id'], ),
    sa.ForeignKeyConstraint(['video_feed_id'], ['video_feeds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_detections_issue_id'), 'ai_detections', ['issue_id'], unique=False)
    op.create_index(op.f('ix_ai_detections_video_feed_id'), 'ai_detections', ['video_feed_id'], unique=False)
    op.create_table('issue_media',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('issue_id', sa.UUID(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=False),
    sa.Column('file_type', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('taken_at', sa.DateTime(), nullable=True),
    sa.Column('uploaded_by_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['issue_id'], ['infrastructure_issues.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_id'], ['user_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_issue_media_issue_id'), 'issue_media', ['issue_id'], unique=False)
    op.create_index(op.f('ix_issue_media_uploaded_by_id'), 'issue_media', ['uploaded_by_id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('issue_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['issue_id'], ['infrastructure_issues.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_is_read'), 'notifications', ['is_read'], unique=False)
    op.create_index(op.f('ix_notifications_issue_id'), 'notifications', ['issue_id'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.create_table('work_orders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('issue_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'completed', 'cancelled', name='workorderstatusenum'), nullable=False),
    sa.Column('assigned_to_id', sa.UUID(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('department', sa.Enum('public_works', 'utilities', 'transportation', 'sanitation', 'parks_recreation', name='departmenttypeenum'), nullable=False),
    sa.Column('estimated_hours', sa.Numeric(5, 2), nullable=True),
    sa.Column('actual_hours', sa.Numeric(5, 2), nullable=True),
    sa.Column('materials_cost', sa.Numeric(10, 2), nullable=True),
    sa.Column('labor_cost', sa.Numeric(10, 2), nullable=True),
    sa.Column('scheduled_date', sa.Date(), nullable=True),
    sa.Column('completed_date', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to_id'], ['user_profiles.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['user_profiles.id'], ),
    sa.ForeignKeyConstraint(['issue_id'], ['infrastructure_issues.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_work_orders_assigned_to_id'), 'work_orders', ['assigned_to_id'], unique=False)
    op.create_index(op.f('ix_work_orders_department'), 'work_orders', ['department'], unique=False)
    op.create_index(op.f('ix_work_orders_issue_id'), 'work_orders', ['issue_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto-generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_work_orders_issue_id'), table_name='work_orders')
    op.drop_index(op.f('ix_work_orders_department'), table_name='work_orders')
    op.drop_index(op.f('ix_work_orders_assigned_to_id'), table_name='work_orders')
    op.drop_table('work_orders')
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_issue_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_is_read'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_issue_media_uploaded_by_id'), table_name='issue_media')
    op.drop_index(op.f('ix_issue_media_issue_id'), table_name='issue_media')
    op.drop_table('issue_media')
    op.drop_index(op.f('ix_ai_detections_video_feed_id'), table_name='ai_detections')
    op.drop_index(op.f('ix_ai_detections_issue_id'), table_name='ai_detections')
    op.drop_table('ai_detections')
    op.drop_index(op.f('ix_infrastructure_issues_video_feed_id'), table_name='infrastructure_issues')
    op.drop_index(op.f('ix_infrastructure_issues_status'), table_name='infrastructure_issues')
    op.drop_index(op.f('ix_infrastructure_issues_reported_by_id'), table_name='infrastructure_issues')
    op.drop_index(op.f('ix_infrastructure_issues_location'), table_name='infrastructure_issues')
    op.drop_index(op.f('ix_infrastructure_issues_issue_type'), table_name='infrastructure_issues')
    op.drop_index(op.f('ix_infrastructure_issues_department'), table_name='infrastructure_issues')
    op.drop_index(op.f('ix_infrastructure_issues_assigned_to_id'), table_name='infrastructure_issues')
    op.drop_table('infrastructure_issues')
    op.drop_index(op.f('ix_video_feeds_location'), table_name='video_feeds')
    op.drop_table('video_feeds')
    op.drop_index(op.f('ix_user_profiles_reset_token'), table_name='user_profiles')
    op.drop__index(op.f('ix_user_profiles_email'), table_name='user_profiles')
    op.drop_table('user_profiles')
    # ### end Alembic commands ###
