"""Add avatar_url and sync other columns

Revision ID: b34bcae9fbad
Revises: 0001
Create Date: 2025-08-12 08:18:32.027591

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b34bcae9fbad'
down_revision: Union[str, Sequence[str], None] = '0001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP EXTENSION IF EXISTS postgis_tiger_geocoder CASCADE;")
    op.add_column('ai_detections', sa.Column('verified_by_id', sa.UUID(), nullable=True))
    try:
        op.drop_constraint(op.f('ai_detections_verified_by_fkey'), 'ai_detections', type_='foreignkey')
    except Exception:
        pass
    op.create_foreign_key(None, 'ai_detections', 'user_profiles', ['verified_by_id'], ['id'])
    op.drop_column('ai_detections', 'verified_by')
    op.add_column('infrastructure_issues', sa.Column('reported_by_id', sa.UUID(), nullable=True))
    op.add_column('infrastructure_issues', sa.Column('assigned_to_id', sa.UUID(), nullable=True))
    try:
        op.drop_index(op.f('ix_infrastructure_issues_assigned_to'), table_name='infrastructure_issues')
    except Exception:
        pass
    try:
        op.drop_index(op.f('ix_infrastructure_issues_reported_by'), table_name='infrastructure_issues')
    except Exception:
        pass
    op.create_index(op.f('ix_infrastructure_issues_assigned_to_id'), 'infrastructure_issues', ['assigned_to_id'], unique=False)
    op.create_index(op.f('ix_infrastructure_issues_reported_by_id'), 'infrastructure_issues', ['reported_by_id'], unique=False)
    try:
        op.drop_constraint(op.f('infrastructure_issues_reported_by_fkey'), 'infrastructure_issues', type_='foreignkey')
    except Exception:
        pass
    try:
        op.drop_constraint(op.f('infrastructure_issues_assigned_to_fkey'), 'infrastructure_issues', type_='foreignkey')
    except Exception:
        pass
    op.create_foreign_key(None, 'infrastructure_issues', 'user_profiles', ['assigned_to_id'], ['id'])
    op.create_foreign_key(None, 'infrastructure_issues', 'user_profiles', ['reported_by_id'], ['id'])
    op.drop_column('infrastructure_issues', 'reported_by')
    op.drop_column('infrastructure_issues', 'assigned_to')
    op.add_column('issue_media', sa.Column('uploaded_by_id', sa.UUID(), nullable=True))
    try:
        op.drop_index(op.f('ix_issue_media_uploaded_by'), table_name='issue_media')
    except Exception:
        pass
    op.create_index(op.f('ix_issue_media_uploaded_by_id'), 'issue_media', ['uploaded_by_id'], unique=False)
    try:
        op.drop_constraint(op.f('issue_media_uploaded_by_fkey'), 'issue_media', type_='foreignkey')
    except Exception:
        pass
    op.create_foreign_key(None, 'issue_media', 'user_profiles', ['uploaded_by_id'], ['id'])
    op.drop_column('issue_media', 'uploaded_by')
    op.add_column('user_profiles', sa.Column('avatar_url', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('reset_token', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('reset_token_expires', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_user_profiles_reset_token'), 'user_profiles', ['reset_token'], unique=False)
    op.add_column('work_orders', sa.Column('assigned_to_id', sa.UUID(), nullable=True))
    op.add_column('work_orders', sa.Column('created_by_id', sa.UUID(), nullable=True))
    try:
        op.drop_index(op.f('ix_work_orders_assigned_to'), table_name='work_orders')
    except Exception:
        pass
    op.create_index(op.f('ix_work_orders_assigned_to_id'), 'work_orders', ['assigned_to_id'], unique=False)
    try:
        op.drop_constraint(op.f('work_orders_assigned_to_fkey'), 'work_orders', type_='foreignkey')
    except Exception:
        pass
    try:
        op.drop_constraint(op.f('work_orders_created_by_fkey'), 'work_orders', type_='foreignkey')
    except Exception:
        pass
    op.create_foreign_key(None, 'work_orders', 'user_profiles', ['created_by_id'], ['id'])
    op.create_foreign_key(None, 'work_orders', 'user_profiles', ['assigned_to_id'], ['id'])
    op.drop_column('work_orders', 'created_by')
    op.drop_column('work_orders', 'assigned_to')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    op.execute("CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;")
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('work_orders', sa.Column('assigned_to', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('work_orders', sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'work_orders', type_='foreignkey')
    op.drop_constraint(None, 'work_orders', type_='foreignkey')
    op.create_foreign_key(op.f('work_orders_created_by_fkey'), 'work_orders', 'user_profiles', ['created_by'], ['id'])
    op.create_foreign_key(op.f('work_orders_assigned_to_fkey'), 'work_orders', 'user_profiles', ['assigned_to'], ['id'])
    op.drop_index(op.f('ix_work_orders_assigned_to_id'), table_name='work_orders')
    op.create_index(op.f('ix_work_orders_assigned_to'), 'work_orders', ['assigned_to'], unique=False)
    op.drop_column('work_orders', 'created_by_id')
    op.drop_column('work_orders', 'assigned_to_id')
    op.drop_index(op.f('ix_user_profiles_reset_token'), table_name='user_profiles')
    op.drop_column('user_profiles', 'reset_token_expires')
    op.drop_column('user_profiles', 'reset_token')
    op.drop_column('user_profiles', 'avatar_url')
    op.add_column('issue_media', sa.Column('uploaded_by', sa.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'issue_media', type_='foreignkey')
    op.create_foreign_key(op.f('issue_media_uploaded_by_fkey'), 'issue_media', 'user_profiles', ['uploaded_by'], ['id'])
    op.drop_index(op.f('ix_issue_media_uploaded_by_id'), table_name='issue_media')
    op.create_index(op.f('ix_issue_media_uploaded_by'), 'issue_media', ['uploaded_by'], unique=False)
    op.drop_column('issue_media', 'uploaded_by_id')
    op.add_column('infrastructure_issues', sa.Column('assigned_to', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('infrastructure_issues', sa.Column('reported_by', sa.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'infrastructure_issues', type_='foreignkey')
    op.drop_constraint(None, 'infrastructure_issues', type_='foreignkey')
    op.create_foreign_key(op.f('infrastructure_issues_assigned_to_fkey'), 'infrastructure_issues', 'user_profiles', ['assigned_to'], ['id'])
    op.create_foreign_key(op.f('infrastructure_issues_reported_by_fkey'), 'infrastructure_issues', 'user_profiles', ['reported_by'], ['id'])
    op.drop_index(op.f('ix_infrastructure_issues_reported_by_id'), table_name='infrastructure_issues')
    op.drop_index(op.f('ix_infrastructure_issues_assigned_to_id'), table_name='infrastructure_issues')
    op.create_index(op.f('ix_infrastructure_issues_reported_by'), 'infrastructure_issues', ['reported_by'], unique=False)
    op.create_index(op.f('ix_infrastructure_issues_assigned_to'), 'infrastructure_issues', ['assigned_to'], unique=False)
    op.drop_column('infrastructure_issues', 'assigned_to_id')
    op.drop_column('infrastructure_issues', 'reported_by_id')
    op.add_column('ai_detections', sa.Column('verified_by', sa.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'ai_detections', type_='foreignkey')
    op.create_foreign_key(op.f('ai_detections_verified_by_fkey'), 'ai_detections', 'user_profiles', ['verified_by'], ['id'])
    op.drop_column('ai_detections', 'verified_by_id')
    # ### end Alembic commands ###